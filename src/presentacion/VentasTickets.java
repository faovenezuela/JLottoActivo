/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.awt.event.ActionEvent;
import java.util.Enumeration;
import java.util.List;
import java.util.Vector;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.entidad.Jugadas;
import persistencia.entidad.RuletaActivaHoras;
import persistencia.servicio.ServicioJugadas;
import persistencia.servicio.ServicioRuletaActivaHoras;

public class VentasTickets extends javax.swing.JInternalFrame {

    DefaultListModel lModel = new DefaultListModel();
    DefaultListModel lModel2 = new DefaultListModel();
   javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
    javax.swing.JTextField txt_numticket = new javax.swing.JTextField();
    javax.swing.JLabel lbl_ticket = new javax.swing.JLabel();
    javax.swing.JTextField txt_numero = new javax.swing.JTextField();
    javax.swing.JLabel lbl_ticket1 = new javax.swing.JLabel();
    javax.swing.JLabel lbl_ticket2 = new javax.swing.JLabel();
    javax.swing.JTextField txt_monto = new javax.swing.JTextField();
    javax.swing.JScrollPane jScrollPane3 = new javax.swing.JScrollPane();
    javax.swing.JList<String> lst_jugadas = new javax.swing.JList<>();
    javax.swing.JButton jButton1 = new javax.swing.JButton();
    javax.swing.JButton jButton2 = new javax.swing.JButton();
    javax.swing.JButton jButton3 = new javax.swing.JButton();
    javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    
    public VentasTickets() {
        initComponents();
        CargarDatos();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JTextField txt_numticket = new javax.swing.JTextField();
        javax.swing.JLabel lbl_ticket = new javax.swing.JLabel();
        javax.swing.JTextField txt_numero = new javax.swing.JTextField();
        javax.swing.JLabel lbl_ticket1 = new javax.swing.JLabel();
        javax.swing.JLabel lbl_ticket2 = new javax.swing.JLabel();
        javax.swing.JTextField txt_monto = new javax.swing.JTextField();
        javax.swing.JScrollPane jScrollPane3 = new javax.swing.JScrollPane();
        javax.swing.JList<String> lst_jugadas = new javax.swing.JList<>();
        javax.swing.JButton jButton4 = new javax.swing.JButton();
        javax.swing.JButton jButton5 = new javax.swing.JButton();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        javax.swing.JList<String> jList1 = new javax.swing.JList<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("venta");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setVerifyInputWhenFocusTarget(false);
        setVisible(true);

        txt_numticket.setEditable(false);
        txt_numticket.setBackground(new java.awt.Color(242, 242, 240));
        txt_numticket.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txt_numticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_numticketActionPerformed(evt);
            }
        });

        lbl_ticket.setText("Ticket:");

        txt_numero.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_numero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_numeroActionPerformed(evt);
            }
        });

        lbl_ticket1.setText("Numero:");

        lbl_ticket2.setText("Monto:");

        txt_monto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_monto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_montoActionPerformed(evt);
            }
        });
        txt_monto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_montoKeyPressed(evt);
            }
        });

        jScrollPane3.setViewportView(lst_jugadas);

        jButton4.setText("jButton4");

        jButton5.setText("jButton5");

        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(334, 334, 334))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lbl_ticket)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txt_numticket, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lbl_ticket1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txt_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lbl_ticket2)
                    .addGap(18, 18, 18)
                    .addComponent(txt_monto, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbl_ticket1)
                        .addComponent(lbl_ticket2)
                        .addComponent(lbl_ticket)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_numticket, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_monto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(351, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void CargarDatos(){
           //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            try {
                //            DefaultListModel lModel = new DefaultListModel();
                

                //Instancio Servicio ruleta activa horas objeto que se encarga
                //de obtener el listado de las horas de loto activo
                
                ServicioRuletaActivaHoras servicio = new ServicioRuletaActivaHoras();
                List<RuletaActivaHoras> RuletaActivaHoras = servicio.getAllRuletaActivaHoras();

                //JList
                //DefaultListModel lModel = new DefaultListModel();
                //            DefaultListModel lModel = (DefaultListModel)lst_sorteo.getModel();
                //            model.addElement(connection);
                //lModel.clear();
                lModel.removeAllElements();

                //Creamos un vector donde agragamos los datos a insertar
                //            Vector datos = new Vector();
                //
                //            this.lst_sorteo.getSelectedValue();
                //
                //            datos.add(this.txt_numticket.getText());
                //            datos.add(this.txt_monto.getText());

                for (RuletaActivaHoras RuletaActivaHora : RuletaActivaHoras) {
                    lModel.addElement(RuletaActivaHora.getDescripcion());
                }
                lst_sorteo.setModel(lModel);

                //table
                //            DefaultTableModel tModel = (DefaultTableModel)tbl_jugadas.getModel();
                //            tModel.setRowCount(0);
                //            for (RuletaActivaHoras RuletaActivaHora : RuletaActivaHoras) {
                    //                Object[] objetos = new Object[]{RuletaActivaHora.getDescripcion(),
                        //                    RuletaActivaHora.getHora().toString(),"",""};
                    //                tModel.addRow(objetos);
                    //
                    //
                    //            }

            }catch (Exception e){
                System.out.println(" Error "+ e);
                //log.error(e);
            }
        }
    private void txt_numticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_numticketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_numticketActionPerformed

    private void txt_numeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_numeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_numeroActionPerformed

    private void txt_montoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_montoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_montoActionPerformed

    private void txt_montoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_montoKeyPressed

        if (evt.getKeyCode()==10){
            //JOptionPane.showMessageDialog(null, evt.getKeyCode());
            try {
                ServicioJugadas servicio = new ServicioJugadas();
                List<Jugadas> Jugadas = servicio.getAllJugadas();
                //Creamos un vector donde agragamos los datos a insertar
                Vector datos = new Vector();
                lst_sorteo.getSelectedValue();
                datos.add(this.txt_numticket.getText());
                datos.add(txt_numero.getText());
                datos.add(this.txt_monto.getText());
                Enumeration en = datos.elements();
                while(en.hasMoreElements()){
                    System.out.println(en.nextElement());
                }

                //                if (datos.elements().){
                    //
                    //                }
                //table
                //                DefaultTableModel tModel = (DefaultTableModel)tbl_jugadas.getModel();
                //                tModel.setRowCount(0);
                //                    for (Jugadas Jugada : Jugadas) {
                    //
                    //                        Object[] objetos = new Object[]{Jugada.getSorteo(),
                        //                            Jugada.getNumAnimalito(),Jugada.getAnimalito(),Jugada.getMonto()};
                    //                        tModel.addRow(objetos);
                    //
                    //
                    //                    }
                //        for (RuletaActivaHoras RuletaActivaHora:RuletaActivaHoras){
                    //            lModel.addElement(RuletaActivaHora.sorteos());
                    //        }
            }catch (Exception e){
                System.out.println(" Error "+ e);
                //log.error(e);
            }
        }

        
    }//GEN-LAST:event_txt_montoKeyPressed
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

